version: 2.1
orbs:
  ruby: circleci/ruby@2.1.0

jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - checkout
      - ruby/install-deps

  checking:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop

  test:
    docker:
      - image: cimg/ruby:3.2.2
        environment:
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: postgres
      - image: cimg/postgres:16.0
    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      PGHOST: 127.0.0.1
      PGPASSWORD: ''
      PGUSER: postgres
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          name: Debug Database Connection
          command: |
            psql -U postgres -c "\du"
            env | grep POSTGRES
      - run:
          name: Create DB for our task
          command: bin/rails db:create
      - run:
          name: Precompile Assets
          command: bin/rails assets:precompile
      - run:
          name: List Compiled Assets
          command: ls -l public/assets
      - run:
          command: bundle exec rails db:schema:load --trace
          name: Database setup
      - ruby/rspec-test:
          include: spec/**/*_spec.rb
      - store_artifacts:
          path: coverage

  deploy:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - checkout
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: Deploy to Heroku_Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
      - run:
          name: db migration
          command: |
            heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      # - run:
      #     name: db seed
      #     command: |
      #       heroku run rails db:seed --app ${HEROKU_APP_NAME}

workflows:
  build_and_test:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build

  deplo_to_heroku:
    jobs:
      - deploy:
          filters:
              branches:
                  only:
                  - main
